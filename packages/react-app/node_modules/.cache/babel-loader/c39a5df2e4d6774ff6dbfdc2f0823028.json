{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined\n    };\n\n    if (options.skipFetchSetup !== true) {\n      request.mode = \"cors\"; // no-cors, cors, *same-origin\n\n      request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n\n      request.credentials = \"same-origin\"; // include, *same-origin, omit\n\n      request.redirect = \"follow\"; // manual, *follow, error\n\n      request.referrer = \"client\"; // no-referrer, *client\n    }\n\n    ;\n\n    if (options.fetchOptions != null) {\n      const opts = options.fetchOptions;\n\n      if (opts.mode) {\n        request.mode = opts.mode;\n      }\n\n      if (opts.cache) {\n        request.cache = opts.cache;\n      }\n\n      if (opts.credentials) {\n        request.credentials = opts.credentials;\n      }\n\n      if (opts.redirect) {\n        request.redirect = opts.redirect;\n      }\n\n      if (opts.referrer) {\n        request.referrer = opts.referrer;\n      }\n    }\n\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}","map":{"version":3,"sources":["/Users/ryan/Desktop/Arcanum/NFTS/tlatc/node_modules/@ethersproject/web/lib.esm/geturl.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","arrayify","getUrl","href","options","request","method","headers","body","undefined","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetchOptions","opts","response","fetch","arrayBuffer","forEach","key","toLowerCase","keys","get","statusCode","status","statusMessage","statusText","Uint8Array"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,QAAT,QAAyB,sBAAzB;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAClC,SAAOtB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,QAAIsB,OAAO,IAAI,IAAf,EAAqB;AACjBA,MAAAA,OAAO,GAAG,EAAV;AACH;;AACD,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAGF,OAAO,CAACE,MAAR,IAAkB,KADf;AAEZC,MAAAA,OAAO,EAAGH,OAAO,CAACG,OAAR,IAAmB,EAFjB;AAGZC,MAAAA,IAAI,EAAGJ,OAAO,CAACI,IAAR,IAAgBC;AAHX,KAAhB;;AAKA,QAAIL,OAAO,CAACM,cAAR,KAA2B,IAA/B,EAAqC;AACjCL,MAAAA,OAAO,CAACM,IAAR,GAAe,MAAf,CADiC,CACV;;AACvBN,MAAAA,OAAO,CAACO,KAAR,GAAgB,UAAhB,CAFiC,CAEL;;AAC5BP,MAAAA,OAAO,CAACQ,WAAR,GAAsB,aAAtB,CAHiC,CAGI;;AACrCR,MAAAA,OAAO,CAACS,QAAR,GAAmB,QAAnB,CAJiC,CAIJ;;AAC7BT,MAAAA,OAAO,CAACU,QAAR,GAAmB,QAAnB,CALiC,CAKJ;AAChC;;AACD;;AACA,QAAIX,OAAO,CAACY,YAAR,IAAwB,IAA5B,EAAkC;AAC9B,YAAMC,IAAI,GAAGb,OAAO,CAACY,YAArB;;AACA,UAAIC,IAAI,CAACN,IAAT,EAAe;AACXN,QAAAA,OAAO,CAACM,IAAR,GAAgBM,IAAI,CAACN,IAArB;AACH;;AACD,UAAIM,IAAI,CAACL,KAAT,EAAgB;AACZP,QAAAA,OAAO,CAACO,KAAR,GAAiBK,IAAI,CAACL,KAAtB;AACH;;AACD,UAAIK,IAAI,CAACJ,WAAT,EAAsB;AAClBR,QAAAA,OAAO,CAACQ,WAAR,GAAuBI,IAAI,CAACJ,WAA5B;AACH;;AACD,UAAII,IAAI,CAACH,QAAT,EAAmB;AACfT,QAAAA,OAAO,CAACS,QAAR,GAAoBG,IAAI,CAACH,QAAzB;AACH;;AACD,UAAIG,IAAI,CAACF,QAAT,EAAmB;AACfV,QAAAA,OAAO,CAACU,QAAR,GAAmBE,IAAI,CAACF,QAAxB;AACH;AACJ;;AACD,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAChB,IAAD,EAAOE,OAAP,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMU,QAAQ,CAACE,WAAT,EAAnB;AACA,UAAMb,OAAO,GAAG,EAAhB;;AACA,QAAIW,QAAQ,CAACX,OAAT,CAAiBc,OAArB,EAA8B;AAC1BH,MAAAA,QAAQ,CAACX,OAAT,CAAiBc,OAAjB,CAAyB,CAACjC,KAAD,EAAQkC,GAAR,KAAgB;AACrCf,QAAAA,OAAO,CAACe,GAAG,CAACC,WAAJ,EAAD,CAAP,GAA6BnC,KAA7B;AACH,OAFD;AAGH,KAJD,MAKK;AACC8B,MAAAA,QAAQ,CAACX,OAAV,CAAmBiB,IAApB,GAA4BH,OAA5B,CAAqCC,GAAD,IAAS;AACzCf,QAAAA,OAAO,CAACe,GAAG,CAACC,WAAJ,EAAD,CAAP,GAA6BL,QAAQ,CAACX,OAAT,CAAiBkB,GAAjB,CAAqBH,GAArB,CAA7B;AACH,OAFD;AAGH;;AACD,WAAO;AACHf,MAAAA,OAAO,EAAEA,OADN;AAEHmB,MAAAA,UAAU,EAAER,QAAQ,CAACS,MAFlB;AAGHC,MAAAA,aAAa,EAAEV,QAAQ,CAACW,UAHrB;AAIHrB,MAAAA,IAAI,EAAEP,QAAQ,CAAC,IAAI6B,UAAJ,CAAetB,IAAf,CAAD;AAJX,KAAP;AAMH,GAtDe,CAAhB;AAuDH","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        if (options.fetchOptions != null) {\n            const opts = options.fetchOptions;\n            if (opts.mode) {\n                request.mode = (opts.mode);\n            }\n            if (opts.cache) {\n                request.cache = (opts.cache);\n            }\n            if (opts.credentials) {\n                request.credentials = (opts.credentials);\n            }\n            if (opts.redirect) {\n                request.redirect = (opts.redirect);\n            }\n            if (opts.referrer) {\n                request.referrer = opts.referrer;\n            }\n        }\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map"]},"metadata":{},"sourceType":"module"}