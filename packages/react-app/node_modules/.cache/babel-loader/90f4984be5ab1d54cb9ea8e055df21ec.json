{"ast":null,"code":"/**\n * Electronic Codebook block mode.\n */\nimport { BlockCipherMode } from './cipher-core.js';\nexport class ECB extends BlockCipherMode {}\nECB.Encryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.encryptBlock(words, offset);\n  }\n};\nECB.Decryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.decryptBlock(words, offset);\n  }\n};","map":{"version":3,"names":["BlockCipherMode","ECB","Encryptor","processBlock","words","offset","_cipher","encryptBlock","Decryptor","decryptBlock"],"sources":["/Users/ryan/Desktop/Arcanum/NFTS/tlatc2/node_modules/crypto-es/lib/mode-ecb.js"],"sourcesContent":["/**\n * Electronic Codebook block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class ECB extends BlockCipherMode {\n}\nECB.Encryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.encryptBlock(words, offset);\n  }\n};\nECB.Decryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.decryptBlock(words, offset);\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SACEA,eAAe,QACV,kBAAkB;AAEzB,OAAO,MAAMC,GAAG,SAASD,eAAe,CAAC;AAEzCC,GAAG,CAACC,SAAS,GAAG,cAAcD,GAAG,CAAC;EAChCE,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAE;IAC1B,IAAI,CAACC,OAAO,CAACC,YAAY,CAACH,KAAK,EAAEC,MAAM,CAAC;EAC1C;AACF,CAAC;AACDJ,GAAG,CAACO,SAAS,GAAG,cAAcP,GAAG,CAAC;EAChCE,YAAYA,CAACC,KAAK,EAAEC,MAAM,EAAE;IAC1B,IAAI,CAACC,OAAO,CAACG,YAAY,CAACL,KAAK,EAAEC,MAAM,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module"}