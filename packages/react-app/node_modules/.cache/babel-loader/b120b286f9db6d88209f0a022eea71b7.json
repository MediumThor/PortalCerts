{"ast":null,"code":"import { WordArray, Hasher } from './core.js';\n\n// Reusable object\nconst W = [];\n\n/**\n * SHA-1 hash algorithm.\n */\nexport class SHA1Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);\n  }\n  _doProcessBlock(M, offset) {\n    // Shortcut\n    const H = this._hash.words;\n\n    // Working variables\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    // Computation\n    for (let i = 0; i < 80; i += 1) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n        W[i] = n << 1 | n >>> 31;\n      }\n      let t = (a << 5 | a >>> 27) + e + W[i];\n      if (i < 20) {\n        t += (b & c | ~b & d) + 0x5a827999;\n      } else if (i < 40) {\n        t += (b ^ c ^ d) + 0x6ed9eba1;\n      } else if (i < 60) {\n        t += (b & c | b & d | c & d) - 0x70e44324;\n      } else /* if (i < 80) */{\n          t += (b ^ c ^ d) - 0x359d3e2a;\n        }\n      e = d;\n      d = c;\n      c = b << 30 | b >>> 2;\n      b = a;\n      a = t;\n    }\n\n    // Intermediate hash value\n    H[0] = H[0] + a | 0;\n    H[1] = H[1] + b | 0;\n    H[2] = H[2] + c | 0;\n    H[3] = H[3] + d | 0;\n    H[4] = H[4] + e | 0;\n  }\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n    dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Return final computed hash\n    return this._hash;\n  }\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA1('message');\n *     var hash = CryptoJS.SHA1(wordArray);\n */\nexport const SHA1 = Hasher._createHelper(SHA1Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA1(message, key);\n */\nexport const HmacSHA1 = Hasher._createHmacHelper(SHA1Algo);","map":{"version":3,"names":["WordArray","Hasher","W","SHA1Algo","_doReset","_hash","_doProcessBlock","M","offset","H","words","a","b","c","d","e","i","n","t","_doFinalize","data","_data","dataWords","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","Math","floor","length","_process","clone","call","SHA1","_createHelper","HmacSHA1","_createHmacHelper"],"sources":["/Users/ryan/Desktop/Arcanum/NFTS/tlatc/node_modules/crypto-es/lib/sha1.js"],"sourcesContent":["import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Reusable object\nconst W = [];\n\n/**\n * SHA-1 hash algorithm.\n */\nexport class SHA1Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n      0xc3d2e1f0,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    // Shortcut\n    const H = this._hash.words;\n\n    // Working variables\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    // Computation\n    for (let i = 0; i < 80; i += 1) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n        W[i] = (n << 1) | (n >>> 31);\n      }\n\n      let t = ((a << 5) | (a >>> 27)) + e + W[i];\n      if (i < 20) {\n        t += ((b & c) | (~b & d)) + 0x5a827999;\n      } else if (i < 40) {\n        t += (b ^ c ^ d) + 0x6ed9eba1;\n      } else if (i < 60) {\n        t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n      } else /* if (i < 80) */ {\n        t += (b ^ c ^ d) - 0x359d3e2a;\n      }\n\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n    H[4] = (H[4] + e) | 0;\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Return final computed hash\n    return this._hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA1('message');\n *     var hash = CryptoJS.SHA1(wordArray);\n */\nexport const SHA1 = Hasher._createHelper(SHA1Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA1(message, key);\n */\nexport const HmacSHA1 = Hasher._createHmacHelper(SHA1Algo);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}