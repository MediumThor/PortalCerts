{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Arcanum/NFTS/tlatc/packages/react-app/src/components/CellsComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CellsComponent(props) {\n  _s();\n\n  const hash = props.hash;\n  let [svg, setSVG] = useState(null);\n\n  if (props.ACSigner !== null) {\n    async function c() {\n      const blob = await props.ACSigner.tokenURI(hash);\n      const response = await fetch(blob); // parses base64 encoded blob to an HTML response\n\n      const metadata = await response.json(); // parse HTML response to JSON form\n\n      const imageResponse = await fetch(metadata.image);\n      const s = await imageResponse.text();\n      setSVG(s);\n    }\n\n    c();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: svg\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CellsComponent, \"Z+f9UvOitFCp1Ct5AXke8UWJygw=\");\n\n_c = CellsComponent;\nexport default CellsComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellsComponent\");","map":{"version":3,"sources":["/Users/ryan/Desktop/Arcanum/NFTS/tlatc/packages/react-app/src/components/CellsComponent.js"],"names":["React","useState","CellsComponent","props","hash","svg","setSVG","ACSigner","c","blob","tokenURI","response","fetch","metadata","json","imageResponse","image","s","text","display","justifyContent","__html"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,MAAI,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,IAAD,CAA5B;;AAEA,MAAIE,KAAK,CAACI,QAAN,KAAmB,IAAvB,EAA6B;AACzB,mBAAeC,CAAf,GAAmB;AACf,YAAMC,IAAI,GAAG,MAAMN,KAAK,CAACI,QAAN,CAAeG,QAAf,CAAwBN,IAAxB,CAAnB;AACA,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACH,IAAD,CAA5B,CAFe,CAEqB;;AACpC,YAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB,CAHe,CAGyB;;AACxC,YAAMC,aAAa,GAAG,MAAMH,KAAK,CAACC,QAAQ,CAACG,KAAV,CAAjC;AACA,YAAMC,CAAC,GAAG,MAAMF,aAAa,CAACG,IAAd,EAAhB;AACAZ,MAAAA,MAAM,CAACW,CAAD,CAAN;AACH;;AACDT,IAAAA,CAAC;AACJ;;AAGD,sBACI;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,cAAc,EAAC;AAAhC,KAAZ;AACI,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEhB;AAAV;AAD7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvBQH,c;;KAAAA,c;AAyBT,eAAeA,cAAf","sourcesContent":["import React, {useState} from \"react\";\n\nfunction CellsComponent(props) {\n    const hash = props.hash;\n    let [svg, setSVG] = useState(null);\n\n    if (props.ACSigner !== null) { \n        async function c() {\n            const blob = await props.ACSigner.tokenURI(hash);\n            const response = await fetch(blob); // parses base64 encoded blob to an HTML response\n            const metadata = await response.json(); // parse HTML response to JSON form\n            const imageResponse = await fetch(metadata.image);\n            const s = await imageResponse.text();\n            setSVG(s);\n        }\n        c();\n    }\n\n\n    return (\n        <div style={{display:\"flex\", justifyContent:\"center\"}} \n            dangerouslySetInnerHTML={{ __html: svg}}    \n        >\n        </div>\n    );\n}\n\nexport default CellsComponent\n"]},"metadata":{},"sourceType":"module"}