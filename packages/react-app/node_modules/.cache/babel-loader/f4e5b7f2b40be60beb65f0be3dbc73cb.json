{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Arcanum/NFTS/tlatc/packages/react-app/src/components/StatsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { ethers } from 'ethers';\nimport { Button } from \"antd\";\nimport moment from \"moment\";\n/*\nOne piece + actions on one page\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StatsPage(props) {\n  _s();\n\n  // let { id } = useParams();\n  const STATS_QUERY = gql`\n    {\n      certificates(first: 1000) {\n        id\n        type\n      }\n    }\n    `;\n  const palettes = [[\"#eca3f5\", \"#fdbaf9\", \"#b0efeb\", \"#edffa9\"], [\"#75cfb8\", \"#bbdfc8\", \"#f0e5d8\", \"#ffc478\"], [\"#ffab73\", \"#ffd384\", \"#fff9b0\", \"#ffaec0\"], [\"#94b4a4\", \"#d2f5e3\", \"#e5c5b5\", \"#f4d9c6\"], [\"#f4f9f9\", \"#ccf2f4\", \"#a4ebf3\", \"#aaaaaa\"], [\"#caf7e3\", \"#edffec\", \"#f6dfeb\", \"#e4bad4\"], [\"#f4f9f9\", \"#f1d1d0\", \"#fbaccc\", \"#f875aa\"], [\"#fdffbc\", \"#ffeebb\", \"#ffdcb8\", \"#ffc1b6\"], [\"#f0e4d7\", \"#f5c0c0\", \"#ff7171\", \"#9fd8df\"], [\"#e4fbff\", \"#b8b5ff\", \"#7868e6\", \"#edeef7\"], [\"#ffcb91\", \"#ffefa1\", \"#94ebcd\", \"#6ddccf\"], [\"#bedcfa\", \"#98acf8\", \"#b088f9\", \"#da9ff9\"], [\"#bce6eb\", \"#fdcfdf\", \"#fbbedf\", \"#fca3cc\"], [\"#ff75a0\", \"#fce38a\", \"#eaffd0\", \"#95e1d3\"], [\"#fbe0c4\", \"#8ab6d6\", \"#2978b5\", \"#0061a8\"], [\"#dddddd\", \"#f9f3f3\", \"#f7d9d9\", \"#f25287\"]];\n  const reasons = [\"BUILD\", \"TRAIN\", \"SEE\", \"DREAM\", \"LIVE\", \"DANCE\", \"HOPE\", \"ARCHITECT\", \"EXPLORE\", \"EAT\", \"TASTE\", \"SMELL\", \"RUN\", \"BE\", \"MEANDER\", \"WALK\", \"LEAVE\", \"LOVE\", \"REMINISCE\", \"GIVE\", \"ASCEND\", \"MEET\", \"LEARN\", \"ENCOMPASS\", \"MEDITATE\", \"FIND\", \"SEEK\", \"LAUGH\", \"LISTEN\", \"FEEL\", \"TOUCH\", \"FORGIVE\", \"ATONE\", \"ACCEPT\", \"PLAY\", \"SING\", \"DRIVE\", \"CLIMB\", \"PAINT\", \"CODE\", \"PONDER\", \"SLEEP\", \"FLY\", \"CREATE\", \"WRITE\", \"DIRECT\", \"ESCAPE\", \"FALL\", \"FLOURISH\", \"JAM\", \"IMPROVISE\", \"JUMP\", \"TREAT\", \"GIFT\", \"EXIT\", \"MIX\", \"SAIL\", \"MAKE\", \"SOLVE\", \"SEARCH\", \"THINK\", \"RESEARCH\", \"ADVANCE\", \"REASON\"];\n  const [detailsSection, setDetailsSection] = useState(\"\");\n  const [savedData, setSavedData] = useState(null);\n  const [getStats, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(STATS_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n  useEffect(() => {\n    getStats();\n  }, []);\n  useEffect(() => {\n    if (!!data) {\n      if (savedData !== null) {\n        setSavedData(data);\n      } else {\n        setSavedData(data);\n      }\n    }\n  }, [data]);\n\n  function getAttributesFromHash(hash) {\n    //\n    // const tid = \"1843077322694485927198323366101614973862212520735689173551697070803419013199\";\n    const hex = ethers.BigNumber.from(hash).toHexString().slice(2);\n    let bytes = [];\n\n    for (let c = 0; c < hex.length; c += 2) {\n      bytes.push(parseInt(hex.substr(c, 2), 16));\n    }\n\n    const p = parseInt(bytes[0] / 16);\n    const r = parseInt(bytes[1] / 4); // console.log('id, hash, pid, rid,', hash, hex, p.toString(), r.toString());\n\n    return {\n      paletteId: p.toString(),\n      reasonId: r.toString()\n    };\n  }\n\n  function initCounter() {\n    let counter = {\n      'palettes': {},\n      'reasons': {},\n      'count': 0\n    };\n\n    for (let i = 0; i < 64; i += 1) {\n      if (i < 16) {\n        counter.palettes[i] = 0;\n      }\n\n      counter.reasons[i] = 0;\n    }\n\n    return counter;\n  }\n\n  function parseCertificates(certs) {\n    let dfCounter = initCounter();\n    let dxCounter = initCounter();\n\n    for (const cert of certs) {\n      const attr = getAttributesFromHash(cert.id);\n\n      if (cert.type === \"Default\") {\n        dfCounter['count'] += 1;\n        dfCounter['palettes'][attr.paletteId] += 1;\n        dfCounter['reasons'][attr.reasonId] += 1;\n      } else if (cert.type === \"Deluxe\") {\n        dxCounter['count'] += 1;\n        dxCounter['palettes'][attr.paletteId] += 1;\n        dxCounter['reasons'][attr.reasonId] += 1;\n      }\n    }\n\n    const counter = {\n      \"default\": dfCounter,\n      \"deluxe\": dxCounter\n    };\n    return counter;\n  }\n\n  function createAttributeHTML(counter) {\n    let paletteHTML = [];\n\n    for (const [paletteId, paletteCount] of Object.entries(counter.palettes).sort(([, a], [, b]) => a - b)) {\n      const paletteArr = palettes[paletteId];\n      const paletteStr = paletteArr.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: val\n          },\n          children: val\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 18\n        }, this);\n      });\n      paletteHTML.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [paletteStr, \" - \", paletteCount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true));\n    }\n\n    let reasonsHTML = [];\n\n    for (const [reasonId, reasonCount] of Object.entries(counter.reasons).sort(([, a], [, b]) => a - b)) {\n      reasonsHTML.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"TO \", reasons[reasonId], \" - \", reasonCount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true));\n    }\n\n    return {\n      paletteHTML,\n      reasonsHTML\n    };\n  } // todo: is this totally necessary? is this merely vestigial when it was necessary to refire?\n\n\n  useEffect(() => {\n    if (savedData !== null) {\n      // set details\n      let detailsHTML;\n      const counter = parseCertificates(savedData.certificates);\n      const dfHTML = createAttributeHTML(counter.default);\n      const dxHTML = createAttributeHTML(counter.deluxe);\n      detailsHTML = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'left',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Anchor Certificate Collection Stats: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Deluxe Certificates: \", counter.deluxe.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), \"Palettes: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), dxHTML.paletteHTML, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 32\n        }, this), \"Reasons: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 20\n        }, this), dxHTML.reasonsHTML, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Default Certificates: \", counter.default.count, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), \"Palettes: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), dfHTML.paletteHTML, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 32\n        }, this), \"Reasons: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 20\n        }, this), dfHTML.reasonsHTML, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }, this);\n      setDetailsSection(detailsHTML);\n    }\n  }, [savedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      textAlign: 'center'\n    },\n    children: detailsSection\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StatsPage, \"yDIeQYRl4AyVuy4sBK9EpuxULvI=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = StatsPage;\nexport default StatsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"sources":["/Users/ryan/Desktop/Arcanum/NFTS/tlatc/packages/react-app/src/components/StatsPage.js"],"names":["React","Fragment","useState","useEffect","useParams","Link","gql","useLazyQuery","ethers","Button","moment","StatsPage","props","STATS_QUERY","palettes","reasons","detailsSection","setDetailsSection","savedData","setSavedData","getStats","loading","error","data","fetchPolicy","getAttributesFromHash","hash","hex","BigNumber","from","toHexString","slice","bytes","c","length","push","parseInt","substr","p","r","paletteId","toString","reasonId","initCounter","counter","i","parseCertificates","certs","dfCounter","dxCounter","cert","attr","id","type","createAttributeHTML","paletteHTML","paletteCount","Object","entries","sort","a","b","paletteArr","paletteStr","map","val","backgroundColor","reasonsHTML","reasonCount","detailsHTML","certificates","dfHTML","default","dxHTML","deluxe","float","textAlign","count"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { gql, useLazyQuery } from '@apollo/client';\n\nimport { ethers } from 'ethers';\nimport { Button } from \"antd\";\nimport moment from \"moment\";\n/*\nOne piece + actions on one page\n*/\n\nfunction StatsPage(props) {\n    // let { id } = useParams();\n\n    const STATS_QUERY = gql`\n    {\n      certificates(first: 1000) {\n        id\n        type\n      }\n    }\n    `\n\n    const palettes = [\n      [\"#eca3f5\", \"#fdbaf9\", \"#b0efeb\", \"#edffa9\"],\n      [\"#75cfb8\", \"#bbdfc8\", \"#f0e5d8\", \"#ffc478\"],\n      [\"#ffab73\", \"#ffd384\", \"#fff9b0\", \"#ffaec0\"],\n      [\"#94b4a4\", \"#d2f5e3\", \"#e5c5b5\", \"#f4d9c6\"],\n      [\"#f4f9f9\", \"#ccf2f4\", \"#a4ebf3\", \"#aaaaaa\"],\n      [\"#caf7e3\", \"#edffec\", \"#f6dfeb\", \"#e4bad4\"],\n      [\"#f4f9f9\", \"#f1d1d0\", \"#fbaccc\", \"#f875aa\"],\n      [\"#fdffbc\", \"#ffeebb\", \"#ffdcb8\", \"#ffc1b6\"],\n      [\"#f0e4d7\", \"#f5c0c0\", \"#ff7171\", \"#9fd8df\"],\n      [\"#e4fbff\", \"#b8b5ff\", \"#7868e6\", \"#edeef7\"],\n      [\"#ffcb91\", \"#ffefa1\", \"#94ebcd\", \"#6ddccf\"],\n      [\"#bedcfa\", \"#98acf8\", \"#b088f9\", \"#da9ff9\"],\n      [\"#bce6eb\", \"#fdcfdf\", \"#fbbedf\", \"#fca3cc\"],\n      [\"#ff75a0\", \"#fce38a\", \"#eaffd0\", \"#95e1d3\"],\n      [\"#fbe0c4\", \"#8ab6d6\", \"#2978b5\", \"#0061a8\"],\n      [\"#dddddd\", \"#f9f3f3\", \"#f7d9d9\", \"#f25287\"]\n    ];\n\n    const reasons = [\n      \"BUILD\",\n      \"TRAIN\",\n      \"SEE\",\n      \"DREAM\",\n      \"LIVE\",\n      \"DANCE\",\n      \"HOPE\",\n      \"ARCHITECT\",\n      \"EXPLORE\",\n      \"EAT\",\n      \"TASTE\",\n      \"SMELL\",\n      \"RUN\",\n      \"BE\",\n      \"MEANDER\",\n      \"WALK\",\n      \"LEAVE\",\n      \"LOVE\",\n      \"REMINISCE\",\n      \"GIVE\",\n      \"ASCEND\",\n      \"MEET\",\n      \"LEARN\",\n      \"ENCOMPASS\",\n      \"MEDITATE\",\n      \"FIND\",\n      \"SEEK\",\n      \"LAUGH\",\n      \"LISTEN\",\n      \"FEEL\",\n      \"TOUCH\",\n      \"FORGIVE\",\n      \"ATONE\",\n      \"ACCEPT\",\n      \"PLAY\",\n      \"SING\",\n      \"DRIVE\",\n      \"CLIMB\",\n      \"PAINT\",\n      \"CODE\",\n      \"PONDER\",\n      \"SLEEP\",\n      \"FLY\",\n      \"CREATE\",\n      \"WRITE\",\n      \"DIRECT\",\n      \"ESCAPE\", \n      \"FALL\",\n      \"FLOURISH\",\n      \"JAM\",\n      \"IMPROVISE\",\n      \"JUMP\",\n      \"TREAT\",\n      \"GIFT\",\n      \"EXIT\",\n      \"MIX\",\n      \"SAIL\",\n      \"MAKE\",\n      \"SOLVE\",\n      \"SEARCH\",\n      \"THINK\",\n      \"RESEARCH\",\n      \"ADVANCE\",\n      \"REASON\"\n    ]\n\n    const [detailsSection, setDetailsSection] = useState(\"\");\n\n    const [savedData, setSavedData] = useState(null);\n\n    const [ getStats, { loading, error, data }] = useLazyQuery(STATS_QUERY, { fetchPolicy: 'network-only'});\n\n    useEffect(() => {\n      getStats();\n    }, []);\n\n    useEffect(() => {\n      if(!!data) {\n        if(savedData !== null) {\n            setSavedData(data);\n        } else { setSavedData(data); }\n      }\n\n    }, [data]);\n\n    function getAttributesFromHash(hash) {\n      //\n      // const tid = \"1843077322694485927198323366101614973862212520735689173551697070803419013199\";\n      const hex = ethers.BigNumber.from(hash).toHexString().slice(2);\n\n      let bytes = [];\n      for (let c = 0; c < hex.length; c += 2) {\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      }\n\n      const p = parseInt(bytes[0]/16);\n      const r = parseInt(bytes[1]/4);\n\n      // console.log('id, hash, pid, rid,', hash, hex, p.toString(), r.toString());\n\n      return { paletteId: p.toString(), reasonId: r.toString()}\n    }\n\n    function initCounter() {\n      let counter = {'palettes': {}, 'reasons': {}, 'count': 0};\n      for(let i = 0; i<64; i+=1) {\n        if(i < 16) {counter.palettes[i] = 0;}\n        counter.reasons[i] = 0;\n      }\n\n      return counter;\n    }\n\n    function parseCertificates(certs) {\n      let dfCounter = initCounter();\n      let dxCounter = initCounter();\n\n      for (const cert of certs) {\n        const attr = getAttributesFromHash(cert.id);\n        if(cert.type === \"Default\") {\n          dfCounter['count'] += 1;\n          dfCounter['palettes'][attr.paletteId] += 1;\n          dfCounter['reasons'][attr.reasonId] += 1;\n        } else if(cert.type === \"Deluxe\") {\n          dxCounter['count'] += 1;\n          dxCounter['palettes'][attr.paletteId] += 1;\n          dxCounter['reasons'][attr.reasonId] += 1;\n        }\n      }\n\n      const counter = {\"default\": dfCounter, \"deluxe\": dxCounter};\n      return counter;\n    }\n\n    function createAttributeHTML(counter) {\n      let paletteHTML = [];\n      for(const [paletteId, paletteCount] of Object.entries(counter.palettes).sort(([,a],[,b]) => a-b)) {\n        const paletteArr = palettes[paletteId];\n        const paletteStr = paletteArr.map((val) => {\n          return <span style={{backgroundColor:val}}>{val}</span>;\n        });\n        paletteHTML.push(<>{paletteStr} - {paletteCount}<br /></>);\n      }\n\n      let reasonsHTML = [];\n      for(const [reasonId, reasonCount] of Object.entries(counter.reasons).sort(([,a],[,b]) => a-b)) {\n        reasonsHTML.push(<>TO {reasons[reasonId]} - {reasonCount}<br /></>);\n      }\n\n      return {paletteHTML, reasonsHTML};\n    }\n\n    // todo: is this totally necessary? is this merely vestigial when it was necessary to refire?\n    useEffect(() => {\n\n      if(savedData !== null) {      \n        // set details\n        let detailsHTML;\n        const counter = parseCertificates(savedData.certificates);\n\n        const dfHTML = createAttributeHTML(counter.default);\n        const dxHTML = createAttributeHTML(counter.deluxe);\n\n\n        detailsHTML = <div style={{float:'left',textAlign:'left'}}>\n          <h2>Anchor Certificate Collection Stats: </h2>\n          <h3>Deluxe Certificates: {counter.deluxe.count}</h3>\n          Palettes: <br />\n          {dxHTML.paletteHTML} <br />\n          Reasons: <br />\n          {dxHTML.reasonsHTML} <br />\n          <h3>Default Certificates: {counter.default.count} </h3>\n          Palettes: <br />\n          {dfHTML.paletteHTML} <br />\n          Reasons: <br />\n          {dfHTML.reasonsHTML}\n          <br />\n        </div>;\n      \n        setDetailsSection(detailsHTML);\n      }\n    }, [savedData]); \n\n    return (\n        <div className=\"App\" style={{textAlign:'center'}}> \n          {detailsSection}\n        </div>\n    );\n}\n\nexport default StatsPage\n"]},"metadata":{},"sourceType":"module"}