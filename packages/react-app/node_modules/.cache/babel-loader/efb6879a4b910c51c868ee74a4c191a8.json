{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/Arcanum/NFTS/tlatc/packages/react-app/src/components/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Link } from 'react-router-dom';\nimport Web3Modal from \"web3modal\";\nimport { Address } from \".\";\nimport { usePoller } from \"../hooks\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INFURA_ID = process.env.REACT_APP_INFURA_ID;\nconst web3Modal = new Web3Modal({\n  //network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\nexport default function Account(props) {\n  _s();\n  const loadWeb3Modal = async () => {\n    const provider = await web3Modal.connect();\n    await props.setInjectedProvider(new ethers.providers.Web3Provider(provider));\n  };\n  const logoutOfWeb3Modal = async () => {\n    const clear = await web3Modal.clearCachedProvider();\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, []); // runs once if cached provider exist\n\n  useEffect(() => {\n    pollInjectedProvider();\n  }, [props.injectedProvider]);\n  const pollInjectedProvider = async () => {\n    if (props.injectedProvider) {\n      let accounts = await props.injectedProvider.listAccounts();\n      if (accounts && accounts[0] && accounts[0] != props.account) {\n        //console.log(\"ADDRESS: \",accounts[0])\n        if (typeof props.setAddress == \"function\") props.setAddress(accounts[0]);\n      }\n    }\n  };\n\n  // turn on address poller for injected provider\n  usePoller(() => {\n    pollInjectedProvider();\n  }, props.pollTime ? props.pollTime : 1999);\n  let modalButtons = [];\n  if (web3Modal.cachedProvider) {\n    modalButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        verticalAlign: \"top\",\n        marginLeft: 8,\n        marginTop: 2\n      },\n      size: \"small\",\n      onClick: logoutOfWeb3Modal,\n      children: \"Log Out\"\n    }, \"logoutbutton\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this));\n  } else {\n    modalButtons.push( /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        verticalAlign: \"top\",\n        marginLeft: 8,\n        marginTop: 2\n      },\n      size: \"small\",\n      onClick: loadWeb3Modal,\n      children: \"Connect Wallet\"\n    }, \"loginbutton\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this));\n  }\n  let displayAddress;\n  if (props.address) {\n    displayAddress = /*#__PURE__*/_jsxDEV(Address, {\n      value: props.address,\n      ensProvider: props.mainnetProvider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        float: \"left\",\n        marginTop: \"4px\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"ANCHOR CERTIFICATES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 57\n        }, this), \" - \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/stats\",\n          children: \"STATS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 99\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), displayAddress, modalButtons, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"N9yTHIqnd3EUAmlMTPhqNqPdHBw=\", false, function () {\n  return [usePoller];\n});\n_c = Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useEffect","ethers","Link","Web3Modal","Address","usePoller","WalletConnectProvider","Button","jsxDEV","_jsxDEV","INFURA_ID","process","env","REACT_APP_INFURA_ID","web3Modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","Account","props","_s","loadWeb3Modal","provider","connect","setInjectedProvider","providers","Web3Provider","logoutOfWeb3Modal","clear","clearCachedProvider","setTimeout","window","location","reload","cachedProvider","pollInjectedProvider","injectedProvider","accounts","listAccounts","account","setAddress","pollTime","modalButtons","push","style","verticalAlign","marginLeft","marginTop","size","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","displayAddress","address","value","ensProvider","mainnetProvider","className","float","to","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/Arcanum/NFTS/tlatc/packages/react-app/src/components/Account.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Link } from 'react-router-dom';\nimport Web3Modal from \"web3modal\";\nimport { Address } from \".\"\nimport { usePoller } from \"../hooks\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Button } from 'antd';\n\nconst INFURA_ID = process.env.REACT_APP_INFURA_ID;\n\nconst web3Modal = new Web3Modal({\n  //network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nexport default function Account(props) {\n\n  const loadWeb3Modal = async () => {\n    const provider = await web3Modal.connect();\n    await props.setInjectedProvider(new ethers.providers.Web3Provider(provider))\n  };\n\n  const logoutOfWeb3Modal = async ()=>{\n    const clear = await web3Modal.clearCachedProvider();\n    setTimeout(()=>{\n      window.location.reload()\n    },1)\n  }\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, []); // runs once if cached provider exist\n\n  useEffect(() => {\n    pollInjectedProvider();\n  }, [props.injectedProvider]);\n\n  const pollInjectedProvider = async () => {\n    if(props.injectedProvider){\n      let accounts = await props.injectedProvider.listAccounts()\n      if(accounts && accounts[0] && accounts[0] != props.account){\n        //console.log(\"ADDRESS: \",accounts[0])\n        if(typeof props.setAddress == \"function\") props.setAddress(accounts[0])\n      }\n    }\n  }\n\n  // turn on address poller for injected provider\n  usePoller(()=>{pollInjectedProvider()},props.pollTime?props.pollTime:1999)\n  \n  let modalButtons = []\n  if (web3Modal.cachedProvider) {\n    modalButtons.push(\n      <Button key=\"logoutbutton\" style={{verticalAlign:\"top\",marginLeft:8,marginTop:2}} size={\"small\"} onClick={logoutOfWeb3Modal}>Log Out</Button>\n    )\n  }else{\n    modalButtons.push(\n      <Button key=\"loginbutton\" style={{verticalAlign:\"top\",marginLeft:8,marginTop:2}} size={\"small\"} onClick={loadWeb3Modal}>Connect Wallet</Button>\n    )\n  }    \n  \n  let displayAddress;\n  if(props.address) {\n    displayAddress = <Address value={props.address} ensProvider={props.mainnetProvider}/>;\n  }\n\n  return (\n    <div className=\"account\" >\n      <span style={{float:\"left\",marginTop:\"4px\"}}> <h3><Link to=\"/\">ANCHOR CERTIFICATES</Link> - <Link to=\"/stats\">STATS</Link></h3>\n      \n      </span>\n      {displayAddress}\n      {modalButtons}\n      <hr />\n    </div>\n  );\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}